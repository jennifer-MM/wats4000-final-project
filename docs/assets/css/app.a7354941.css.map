{"version":3,"sources":["webpack:///src/src/App.vue","webpack:///src/views/src/views/BreakingBad.vue","webpack:///src/views/src/views/BreakingRandom.vue"],"names":[],"mappings":"AAiBA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,eAAA,CACA,aAAA,CACA,SAAA,CACA,gBAAA,CACA,WAAA,CACA,aAAA,CACA,eAAA,CACA,YACA,CACA,UACA,eAAA,CACA,QAAA,CACA,SACA,CC6BA,8BACA,gBACA,CAEA,kCACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAA,CACA,0BAAA,CACA,aACA,CACA,wBACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,gBACA,CACA,wCACA,eACA,CAEA,4BACA,oBAAA,CACA,SACA,CAEA,6BACA,oBAAA,CACA,WAAA,CACA,qBAAA,CACA,aAAA,CACA,WAAA,CACA,gBAAA,CACA,UAAA,CACA,yBACA,CACA,2BACA,oBACA,CACA,4BACA,oBAAA,CACA,SAAA,CACA,aAAA,CACA,aACA,CAEA,mBACA,aACA,CCnEA,iDACA,gBAAA,CACA,aACA,CAEA,yBACA,eAAA,CACA,UACA,CAEA,uBACA,eAAA,CACA,gBAAA,CACA,iBAAA,CACA,4BAAA,CACA,WAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAA,CACA,0BAAA,CACA,aACA,CACA,wBACA,eAAA,CACA,aAAA,CACA,eAAA,CACA,UAAA,CACA,WAAA,CACA,cAAA,CACA,gBACA,CACA,wCAEA,eACA,CACA,2BACA,oBACA,CACA,4BACA,oBAAA,CACA,SAAA,CACA,aAAA,CACA,aACA,CACA,mBACA,aACA","file":"app.a7354941.css","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id=\"nav\">\n      <router-link to=\"/BreakingBad\">Learn about Breaking Bad</router-link> |\n      <router-link to=\"/BreakingRandom\">Random Quote</router-link> |\n    </div>\n    <router-view/>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app'\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: left;\n  color: #2c3e50;\n  width: 75%;\n  min-height: 100vh;\n  height: 100%;\n  margin: 0 auto;\n  background: #fff;\n  padding: 2rem;\n}\nbody, html {\n  background: #666;\n  margin: 0;\n  padding: 0;\n}\n</style>","<template>\n  <div class=\"breakingBad\">\n    <h1>Breaking Bad: Learn about the characters</h1>\n    <form v-on:submit.prevent=\"findName\">\n      <p>Search the characters by name <input type=\"text\" v-model=\"names\"><button type=\"submit\">Search</button></p>\n    </form>\n    <ul v-if=\"results && results.length > 0\" class=\"results\">\n      <li v-for=\"item of results\">\n        <p><strong>{{item.word}}</strong></p>\n        <p>{{item.score}}</p>\n      </li>\n    </ul>\n    <div v-else-if=\"results && results.length==0\" class=\"no-results\">\n      <h2>A character does not have that name</h2>\n      <p>Please try \"Walter\", \"Saul\" or \"Jesse\".</p>\n    </div>\n\n    <ul v-if=\"errors && errors.length > 0\" class=\"errors\">\n      <li v-for=\"error of errors\">\n        {{error.message}}\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'breakingBad',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      phrase: '',\n      name:'',\n      occupation:'',\n      img:'',\n      status:'',\n      nickname:'',\n      protrayed:''\n    }\n  },\n  methods: {\n    findName: function(){\n      axios.get('https://www.breakingbadapi.com/api/characters?name=', {\n        params: {\n          name: this.name,\n        }\n      })\n      .then(response => {\n        this.results = response.data;\n      })\n      .catch(error => {\n        this.errors.push(error);\n      });\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.breakingBad {\n  font-size: 1.4rem;\n}\n\ninput[type=\"text\"]{\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0,0,0,0.02);\n  padding: 0.5rem;\n}\nbutton{\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1, h2 {\n  font-weight: normal;\n}\n\nul.results {\n  list-style-type: none;\n  padding: 0;\n}\n\n.results li {\n  display: inline-block;\n  margin: 10px;\n  border: solid 1px #333;\n  padding: 0.5rem;\n  width: 200px;\n  min-height: 100px;\n  color: #fff;\n  background: rgba(0,0,0,0.7);\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\n\na {\n  color: #42b983;\n}\n</style>","<template>\n  <div class=\"quote\">\n    <h1>Breaking Bad Quotes</h1>\n    <form v-on:click=\"findQuote\">\n      <p>\n        <button type=\"submit\">Get a random quote</button>\n      </p>\n    </form>\n    <ul v-if=\"results && results.length > 0\" class=\"results\">\n        <li v-for=\"item of results\" :key=\"item\">\n            <p><strong>{{item.quote}}</strong></p>\n            <p>{{item.author}}</p>\n            <p>{{item.series}}</p>\n        </li>\n    </ul>\n\n  </div>\n\n \n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'Quote',\n  data () {\n    return {\n      results: null,\n      errors: [],\n      quote:'',\n      author:'',\n      series:''\n    }\n  },\n methods: {\n    findQuote: function(){\n      axios.get('https://www.breakingbadapi.com/api/quote/random', {\n        params: {}\n      })\n      .then(response => {\n      this.results = response.data;\n    })\n    .catch(error => {\n      this.errors.push(error);\n    });\n  }\n }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.quote, .series {\n  font-size: 1.4rem;\n  color: #42b983;\n}\n\n.author {\n    font-size: 1 rem;\n    color: black\n}\n\ninput {\n  border-top: none;\n  border-left: none;\n  border-right: none;\n  border-bottom: 1px solid #333;\n  width: 300px;\n  font-size: 1.4rem;\n  color: #2c3e50;\n  font-weight: 300;\n  background: rgba(0, 0, 0, 0.02);\n  padding: 0.5rem;\n}\nbutton {\n  background: #333;\n  padding: 0.5rem;\n  font-weight: 300;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  font-size: 1.4rem;\n}\nh1,\nh2 {\n  font-weight: normal;\n}\nul.errors {\n  list-style-type: none;\n}\n.errors li {\n  border: 1px solid red;\n  color: red;\n  padding: 0.5rem;\n  margin: 10px 0;\n}\na {\n  color: #42b983;\n}\n</style>\nÂ© 2020 GitHub, Inc.\nTerms\nPrivacy\nSecurity\nStatus\nHelp\nContact GitHub\nPricing\nAPI\nTraining\nBlog\nAbout\n"]}